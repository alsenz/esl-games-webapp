load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin", "nodejs_test", "nodejs_binary", "npm_package_bin")
load("@npm//react-scripts:index.bzl", "react_scripts", "react_scripts_test")

nodejs_binary(
    name = "builder",
    entry_point = "scripts/build.js"
)

APPS = ["lobby", "console", "presentation", "creator", "admin"]

# Filename conventions described at
# https://create-react-app.dev/docs/running-tests#filename-conventions
_TESTS = [
    "src/**/*.test.js*",
    "src/**/*.test.ts*",
    "src/**/*.spec.js*",
    "src/**/*.spec.ts*",
    "src/**/__tests__/**/*.js*",
    "src/**/__tests__/**/*.ts*",
    "_tmp/**"
]

# Remember to keep these up to date 
APP_BUNDLE = [
    "asset-manifest.json",
    "favicon.ico",
    "index.html",
    "logo192.png",
    "logo512.png",
    "manifest.json",
    "robots.txt",
    "static/js/main.js",
    "static/js/main.js.LICENSE.txt",
    "static/js/main.js.map",
    "static/media/logo.6ce24c58.svg"
]



#APP_NAME = APPS[0]

[genrule(
    name = "package-" + APP_NAME,
    srcs = glob(
        [
            "public/*",
            "src/**/*",
            "node_modules/**/*"
        ],
        exclude = _TESTS,
    ) + [
        "package.json",
        "tsconfig.json",
    ],
    outs = ["build-%s/" % APP_NAME + x for x in APP_BUNDLE],
    tags = ["no-sandbox"], # Needed due to node-patches.js changing files -- but we're linking too superficially...
    tools = ["//:builder"],
    output_to_bindir = True,
    cmd = "$(execpath //:builder) $(execpath package.json) $(@D)/build-%s %s" % (APP_NAME, APP_NAME)
) for APP_NAME in APPS]


# Now let's make a docker image out of it

load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

[pkg_tar(
    name = "tar-" + APP_NAME,
    srcs = ["build-%s/" % APP_NAME + x for x in APP_BUNDLE],
    mode = "0o644",
    package_dir = "/usr/share/nginx/html/",
    strip_prefix = "buildi-%s" % APP_NAME,
) for APP_NAME in APPS]

[container_image(
    name = "%s-image" % APP_NAME,
    base = "@nginx_base//image",
    tars = [":tar-%s" % APP_NAME],
    visibility = ["//visibility:public"]
) for APP_NAME in APPS]
